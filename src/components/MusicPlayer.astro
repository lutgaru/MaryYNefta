---
interface Props {
    song: string;
    volume?: number;
}
const { song, volume = 0.5 } = Astro.props;
---

<music-player data-song={song} data-volume={volume}>
    <button
        id="audio-toggle-btn"
        class="fixed bottom-4 right-4 px-4 py-2 rounded-4xl bg-white/50 font-semibold shadow hover:bg-white transition z-50"
    >
        ⏸️
    </button>
</music-player>

<script>
    class MusicPlayer extends HTMLElement {
        constructor() {
            super();
            this.isPlaying = false;
            this.audio = new Audio(this.dataset.song);
            this.audio.volume = parseFloat(this.dataset.volume) || 0.4;
            const button = this.querySelector("button");
            button.addEventListener("click", () => {
                toggleAudio();
            });

            toggleAudio = () => {
                if (!this.isPlaying) {
                    this.audio.play();
                    button.textContent = "⏸️";
                } else {
                    this.audio.pause();
                    button.textContent = "▶️";
                }
                this.isPlaying = !this.isPlaying;
            };

            // Exponer la instancia globalmente
            window.musicPlayerInstance = this;
        }
    }

    window.toggleAudio = () => {
        const player = window.musicPlayerInstance;
        if (!player) return;
        player.toggleAudio();
    };

    customElements.define("music-player", MusicPlayer);
</script>
